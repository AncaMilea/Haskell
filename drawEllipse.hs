-- Exercise 11
-- You are asked to generate a list of rectangles giving an image of an ellipse. The ellipse is defined by the
-- floating point input parameters xCentre yCentre a b and has a boundary logically consisting of those realvalued
-- points (x,y) satisfying the equation (x – xCentre)2/ a2 + (y – yCentre)2/ b2 = 1. In practice, not all such
-- points can be represented computationally. The image generated by these rectangles should contain the
-- (integer) coordinates of all points on or within the given ellipse. It is also expected that the list by the
-- drawEllipse function is a minimal one in the sense defined in the previous exercise.

data Rectangle = Rectangle (Int, Int) (Int, Int) deriving (Eq, Show)
drawEllipse :: Float -> Float -> Float -> Float -> [Rectangle]
drawEllipse x y a b = makeRect tup
                  where 
                    tup= calcTup x y a b interval
                    interval= max a b

calcTup :: Float -> Float -> Float -> Float -> Float-> [(Int,Int)]
calcTup x y a b interv = [(round(x1),round(y1)) |x1<-[-interv..interv],y1<-[-interv..interv], ((((x1 - x)^2)/(a^2)) + (((y1 - y)^2)/(b^2)))==1]

makeRect:: [(Int,Int)]->[Rectangle]
makeRect [] = []
makeRect (x:xs) = Rectangle x (last xs):makeRect (init xs)
